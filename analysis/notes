Today I went on a hike and found a pile of tensors hidden underneath a neolithic burial mound!
        
I sent it over to the local neural plumber, and they managed to cobble together this.

**[model.pt](https://huggingface.co/jane-street/2025-03-10/tree/main)**
            
Anyway, I'm not sure what it does yet, but it must have been important to this past civilization. 
Maybe start by looking at the last two layers. 

If you do figure it out, please let us know at *archaeology@janestreet.com*.
Learn more at [janestreet.com](https://jane-st.co/3YfP5WK)


----

5442 layers
Linear -> ReLU

Last 5 layers

(5432): Linear(in_features=416, out_features=416, bias=True)
(5433): ReLU()
(5434): Linear(in_features=416, out_features=320, bias=True)
(5435): ReLU()
(5436): Linear(in_features=320, out_features=192, bias=True)
(5437): ReLU()
(5438): Linear(in_features=192, out_features=48, bias=True)
(5439): ReLU()
(5440): Linear(in_features=48, out_features=1, bias=True)
(5441): ReLU()

Wx+b
then Relu activation
features seem to go in and out
but at the end

416 -> 320 -> 192 -> 48 -> 1
this seems to follow

Pattern: each number is approximately scaled down by a factor:
416 → 320 (× 0.769)
320 → 192 (× 0.6)
192 → 48 (× 0.25)
48 → 1 (× ~0.021)

Yes, it resembles a power law decay or exponential-like compression. Plotting log(values) vs. layer index would likely show a roughly linear trend—indicative of a power law:
y ≈ a · x^k or y ≈ a · e^(–bx).



Maybe let's graph all of them
every layer that changes the dimension (e.g., L1(55, 224), L3(224, 232), L5(232, 64)) is followed by a layer that keeps the dimension the same (e.g., L2(224, 224), L4(232, 232), L6(64, 64)), each pair followed by ReLUs


The final Linear(48, 1) layer strongly indicates that the network's purpose is either binary classification (outputting a single logit) or regression (predicting a single continuous value).


the hash function hypothesis is very likely correct
so you have:

5442 layers
5442/2=2721 linear layers


18 + ((19 + 14 + 12) * 7) + ((19 + 14 + 12) * 5) + ((19 + 14 + 12) * 5) + 60
2*18 + ((2*19 + 2*14 + 2*12) * 7) + ((2*19 + 2*14 + 2*12) * 5) + ((2*19 + 2*14 + 2*12) * 5) + 2*60




